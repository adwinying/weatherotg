package pages

import (
	"github.com/adwinying/weatherotg/lib"
	"github.com/adwinying/weatherotg/templates/components"
	i "github.com/callsamu/templicons"
	"fmt"
)

func formattedForecastsToTemplateForecasts(formatted []lib.FormattedForecastWeatherInfo) []components.Forecast {
	result := []components.Forecast{}
	for _, forecast := range formatted {
		result = append(result, components.Forecast{
			Title:        forecast.Timestamp.Format("15:04"),
			Description:  forecast.Description,
			Icon:         forecast.Icon,
			TempC:        forecast.Detail.TempC,
			ChanceOfRain: forecast.Detail.ChanceOfRain,
			WindSpeedMs:  fmt.Sprintf("%d", int(forecast.WindSpeedMs)),
		})
	}

	return result
}

templ IndexContent(location string, weatherInfo *lib.FormattedWeather) {
	<div class="flex gap-3 mx-auto max-w-fit my-4">
		<div>
			@i.Icon(weatherInfo.Current.Icon, i.Params().SetDimensions(80, 80))
		</div>
		<div>
			<h1 class="text-xl font-bold">{ location }</h1>
			<h2 class="leading-tight">{ weatherInfo.Current.Description }</h2>
			<p>
				{ weatherInfo.Current.Detail.TempC }Â°C,
				{ fmt.Sprintf("%.2f", weatherInfo.Current.WindSpeedMs) }m/s
				{ weatherInfo.Current.Detail.Winddir16Point }
			</p>
		</div>
	</div>
	<div class="space-y-3">
		<div class="card rounded bg-neutral shadow-xl pt-3 pb-6">
			<h3 class="mb-3 font-bold text-center">Forecast</h3>
			@components.ForecastGroup(formattedForecastsToTemplateForecasts(weatherInfo.Forecast[:]))
		</div>
		for _, daily := range weatherInfo.Daily {
			<div class="card rounded bg-neutral shadow-xl pt-3 pb-6">
				<h3 class="mb-3 font-bold text-center">
					{ daily.Timestamp.Format("2006/01/02") }
				</h3>
				@components.ForecastGroup(formattedForecastsToTemplateForecasts(daily.Hourly[:]))
			</div>
		}
	</div>
}
